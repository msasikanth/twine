CREATE VIRTUAL TABLE IF NOT EXISTS post_search USING FTS5(
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    link TEXT NOT NULL PRIMARY KEY UNINDEXED,
    tokenize="trigram"
);

CREATE TRIGGER IF NOT EXISTS
post_search_fts_BEFORE_DELETE
BEFORE DELETE ON post
BEGIN DELETE FROM post_search WHERE link = old.link;
END;

CREATE TRIGGER IF NOT EXISTS
post_search_fts_AFTER_UPDATE
AFTER UPDATE ON post
BEGIN UPDATE OR IGNORE post_search SET title = new.title, description = new.description WHERE link = new.link;
END;

CREATE TRIGGER IF NOT EXISTS
post_search_fts_AFTER_INSERT
AFTER INSERT ON post
BEGIN INSERT OR IGNORE INTO post_search(title, description, link) VALUES (new.title, new.description, new.link);
END;

search:
SELECT
  post_search.title,
  post_search.description,
  post.imageUrl,
  post.date,
  post.link,
  post.bookmarked,
  feed.name AS feedName,
  feed.icon AS feedIcon,
  feedLink
FROM post_search
INNER JOIN post ON post.link == post_search.link
INNER JOIN feed ON post.feedLink == feed.link
WHERE post_search MATCH :search_query
ORDER BY
  CASE WHEN :sortOrder = 'oldest' THEN post.date END ASC,
  CASE WHEN :sortOrder = 'newest' THEN post.date END DESC;
