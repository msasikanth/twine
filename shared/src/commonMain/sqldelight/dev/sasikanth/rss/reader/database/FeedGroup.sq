import kotlin.String;
import kotlin.collections.List;
import kotlinx.datetime.Instant;

CREATE TABLE IF NOT EXISTS feedGroup(
  id TEXT NOT NULL PRIMARY KEY,
  name TEXT NOT NULL,
  feedIds TEXT AS List<String> NOT NULL,
  createdAt INTEGER AS Instant NOT NULL,
  updatedAt INTEGER AS Instant NOT NULL,
  pinnedAt INTEGER AS Instant
);

CREATE INDEX feed_group_pinned_at ON feedGroup(pinnedAt);

count:
SELECT COUNT(*) FROM feedGroup;

pinnedGroupsCount:
SELECT COUNT(*) FROM feedGroup WHERE pinnedAt IS NOT NULL;

groups:
SELECT
  id,
  name,
  feedIds,
  COALESCE((SELECT GROUP_CONCAT(feed.icon)
              FROM feed
              WHERE INSTR(feedGroup.feedIds, feed.id)
              LIMIT 4), '') AS feedIcons,
  createdAt,
  updatedAt,
  pinnedAt
FROM feedGroup
LIMIT :limit OFFSET :offset;

pinnedGroups:
SELECT
  id,
  name,
  feedIds,
  COALESCE((SELECT GROUP_CONCAT(feed.icon)
              FROM feed
              WHERE INSTR(feedGroup.feedIds, feed.id)
              LIMIT 4), '') AS feedIcons,
  createdAt,
  updatedAt,
  pinnedAt
FROM feedGroup
WHERE pinnedAt IS NOT NULL
LIMIT :limit OFFSET :offset;

createGroup:
INSERT INTO feedGroup(id, name, feedIds, createdAt, updatedAt)
VALUES (:id,  :name, :feedIds, :createdAt, :updatedAt);

updateGroupName:
UPDATE feedGroup SET name = :name WHERE id = :id;

updateFeedIds:
UPDATE feedGroup SET feedIds = :feedIds WHERE id = :id;

deleteGroup:
DELETE FROM feedGroup WHERE id = :id;

updatePinnedAt:
UPDATE feedGroup SET pinnedAt = :pinnedAt WHERE id = :id;

groupByFeedId:
SELECT * FROM feedGroup WHERE INSTR(feedIds, :feedId);

group:
SELECT * FROM feedGroup WHERE id = :id;

groupsByIds:
SELECT
  id,
  name,
  feedIds,
  COALESCE((SELECT GROUP_CONCAT(feed.icon)
              FROM feed
              WHERE INSTR(feedGroup.feedIds, feed.id)
              LIMIT 4), '') AS feedIcons,
  createdAt,
  updatedAt,
  pinnedAt
FROM feedGroup
WHERE id IN :ids;
